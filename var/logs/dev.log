[2017-09-08 16:12:12] console.ERROR: Error thrown while running command "doctrine:database:create". Message: "An exception occured in driver: could not find driver" {"error":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occured in driver: could not find driver at /home/steve/WeddingTablePlanning/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:115, Doctrine\\DBAL\\Driver\\PDOException(code: 0): could not find driver at /home/steve/WeddingTablePlanning/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:47, PDOException(code: 0): could not find driver at /home/steve/WeddingTablePlanning/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:43)","command":"doctrine:database:create","message":"An exception occured in driver: could not find driver"} []
[2017-09-08 16:12:12] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2017-09-08 16:13:39] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2017-09-08 16:24:23] console.ERROR: Error thrown while running command "'doctrine:'". Message: "Command "doctrine:" is ambiguous. Did you mean one of these?     doctrine:mapping:import                Imports mapping information from an existing database     doctrine:database:create               Creates the configured database     doctrine:generate:entities             Generates entity classes and method stubs from your mapping information     doctrine:database:drop                 Drops the configured database     doctrine:cache:clear-result            Clears result cache for an entity manager     doctrine:schema:update                 Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.     doctrine:cache:clear-collection-region Clear a second-level cache collection region.     doctrine:mapping:info                       doctrine:schema:validate               Validate the mapping files.     doctrine:mapping:convert               Convert mapping information between supported formats.     doctrine:ensure-production-settings    Verify that Doctrine is properly configured for a production environment.     doctrine:cache:clear-query             Clears all query cache for an entity manager     doctrine:cache:clear-entity-region     Clear a second-level cache entity region.     doctrine:query:dql                     Executes arbitrary DQL directly from the command line.     doctrine:schema:create                 Executes (or dumps) the SQL needed to generate the database schema     doctrine:schema:drop                   Executes (or dumps) the SQL needed to drop the current database schema     doctrine:query:sql                     Executes arbitrary SQL directly from the command line.     doctrine:database:import               Import SQL file(s) directly to Database.     doctrine:cache:clear-metadata          Clears all metadata cache for an entity manager     doctrine:cache:clear-query-region      Clear a second-level cache query region.     doctrine:generate:form                 Generates a form type class based on a Doctrine entity     doctrine:generate:entity               Generates a new Doctrine entity inside a bundle     doctrine:generate:crud                 Generates a CRUD based on a Doctrine entity" {"error":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"doctrine:\" is ambiguous.\nDid you mean one of these?\n    doctrine:mapping:import                Imports mapping information from an existing database\n    doctrine:database:create               Creates the configured database\n    doctrine:generate:entities             Generates entity classes and method stubs from your mapping information\n    doctrine:database:drop                 Drops the configured database\n    doctrine:cache:clear-result            Clears result cache for an entity manager\n    doctrine:schema:update                 Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.\n    doctrine:cache:clear-collection-region Clear a second-level cache collection region.\n    doctrine:mapping:info                  \n    doctrine:schema:validate               Validate the mapping files.\n    doctrine:mapping:convert               Convert mapping information between supported formats.\n    doctrine:ensure-production-settings    Verify that Doctrine is properly configured for a production environment.\n    doctrine:cache:clear-query             Clears all query cache for an entity manager\n    doctrine:cache:clear-entity-region     Clear a second-level cache entity region.\n    doctrine:query:dql                     Executes arbitrary DQL directly from the command line.\n    doctrine:schema:create                 Executes (or dumps) the SQL needed to generate the database schema\n    doctrine:schema:drop                   Executes (or dumps) the SQL needed to drop the current database schema\n    doctrine:query:sql                     Executes arbitrary SQL directly from the command line.\n    doctrine:database:import               Import SQL file(s) directly to Database.\n    doctrine:cache:clear-metadata          Clears all metadata cache for an entity manager\n    doctrine:cache:clear-query-region      Clear a second-level cache query region.\n    doctrine:generate:form                 Generates a form type class based on a Doctrine entity\n    doctrine:generate:entity               Generates a new Doctrine entity inside a bundle\n    doctrine:generate:crud                 Generates a CRUD based on a Doctrine entity at /home/steve/WeddingTablePlanning/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:624)","command":"'doctrine:'","message":"Command \"doctrine:\" is ambiguous.\nDid you mean one of these?\n    doctrine:mapping:import                Imports mapping information from an existing database\n    doctrine:database:create               Creates the configured database\n    doctrine:generate:entities             Generates entity classes and method stubs from your mapping information\n    doctrine:database:drop                 Drops the configured database\n    doctrine:cache:clear-result            Clears result cache for an entity manager\n    doctrine:schema:update                 Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.\n    doctrine:cache:clear-collection-region Clear a second-level cache collection region.\n    doctrine:mapping:info                  \n    doctrine:schema:validate               Validate the mapping files.\n    doctrine:mapping:convert               Convert mapping information between supported formats.\n    doctrine:ensure-production-settings    Verify that Doctrine is properly configured for a production environment.\n    doctrine:cache:clear-query             Clears all query cache for an entity manager\n    doctrine:cache:clear-entity-region     Clear a second-level cache entity region.\n    doctrine:query:dql                     Executes arbitrary DQL directly from the command line.\n    doctrine:schema:create                 Executes (or dumps) the SQL needed to generate the database schema\n    doctrine:schema:drop                   Executes (or dumps) the SQL needed to drop the current database schema\n    doctrine:query:sql                     Executes arbitrary SQL directly from the command line.\n    doctrine:database:import               Import SQL file(s) directly to Database.\n    doctrine:cache:clear-metadata          Clears all metadata cache for an entity manager\n    doctrine:cache:clear-query-region      Clear a second-level cache query region.\n    doctrine:generate:form                 Generates a form type class based on a Doctrine entity\n    doctrine:generate:entity               Generates a new Doctrine entity inside a bundle\n    doctrine:generate:crud                 Generates a CRUD based on a Doctrine entity"} []
[2017-09-08 16:28:52] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2017-09-08 16:28:52] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname                 FROM   information_schema.sequences                 WHERE  sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2017-09-08 16:28:52] doctrine.DEBUG: SELECT min_value, increment_by FROM "table_list_id_seq" [] []
[2017-09-08 16:28:52] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2017-09-08 16:28:52] doctrine.DEBUG: SELECT nspname as schema_name FROM pg_namespace WHERE nspname !~ '^pg_.*' and nspname != 'information_schema' [] []
[2017-09-08 16:28:52] doctrine.DEBUG: SHOW search_path [] []
[2017-09-08 16:28:52] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'table_list' AND n.nspname = ANY(string_to_array((select replace(replace(setting,'"$user"',user),' ','') from pg_catalog.pg_settings where name = 'search_path'),','))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2017-09-08 16:28:53] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'table_list' AND n.nspname = ANY(string_to_array((select replace(replace(setting,'"$user"',user),' ','') from pg_catalog.pg_settings where name = 'search_path'),',')) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2017-09-08 16:28:53] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'table_list' AND sn.nspname = ANY(string_to_array((select replace(replace(setting,'"$user"',user),' ','') from pg_catalog.pg_settings where name = 'search_path'),',')) AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2017-09-08 16:28:53] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute                 WHERE attrelid=16406 AND attnum IN (1 ) ORDER BY attnum ASC; [] []
[2017-09-08 16:28:53] doctrine.DEBUG: SHOW search_path [] []
[2017-09-08 16:28:53] doctrine.DEBUG: SHOW search_path [] []
[2017-09-08 16:28:53] console.DEBUG: Command "doctrine:schema:update" exited with code "1" {"command":"doctrine:schema:update","code":1} []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT sequence_name AS relname,                        sequence_schema AS schemaname                 FROM   information_schema.sequences                 WHERE  sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT min_value, increment_by FROM "table_list_id_seq" [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT nspname as schema_name FROM pg_namespace WHERE nspname !~ '^pg_.*' and nspname != 'information_schema' [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SHOW search_path [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type, (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'table_list' AND n.nspname = ANY(string_to_array((select replace(replace(setting,'"$user"',user),' ','') from pg_catalog.pg_settings where name = 'search_path'),','))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'table_list' AND n.nspname = ANY(string_to_array((select replace(replace(setting,'"$user"',user),' ','') from pg_catalog.pg_settings where name = 'search_path'),',')) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'table_list' AND sn.nspname = ANY(string_to_array((select replace(replace(setting,'"$user"',user),' ','') from pg_catalog.pg_settings where name = 'search_path'),',')) AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SELECT attnum, attname FROM pg_attribute                 WHERE attrelid=16406 AND attnum IN (1 ) ORDER BY attnum ASC; [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SHOW search_path [] []
[2017-09-08 16:33:45] doctrine.DEBUG: SHOW search_path [] []
[2017-09-08 16:33:45] console.DEBUG: Command "doctrine:schema:update" exited with code "1" {"command":"doctrine:schema:update","code":1} []
